
services:
  main:
    image: python:3.11
    container_name: main
    hostname: main
    tty: true
    restart: on-failure
    volumes:
      - ../:/srv/app

  app-backend:
    build:
      target: development
    command: python portfolio/manage.py runserver 0.0.0.0:8000
    ports:
      - ${DJANGO_PORT}:8000
      - ${DEBUG_DEBUGPY_APP_PORT:-5678}:5678

  app-frontend:
    build:
      context: ..
      dockerfile: .docker/Dockerfile.frontend
      target: development
    container_name: app-frontend
    hostname: app-frontend
    restart: unless-stopped
    command: sh -c "yarn dev & yarn storybook --no-open"
    ports:
      - "5173:5173"
      - "6006:6006"
    volumes:
      - ../frontend:/srv/app
      - /srv/app/node_modules
    environment:
      NODE_ENV: ${NODE_ENV}
      REACT_APP_BASE_URL: ${BASE_URL}
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
      BUILD_REACT_APP: ${BUILD_REACT_APP}
      BUILD_STORYBOOK: ${BUILD_STORYBOOK}

  nginx:
    image: nginx:stable
    container_name: app-nginx
    hostname: app-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/certs:/etc/nginx/certs/:ro
      - ./nginx/development:/etc/nginx/templates/:ro
      - ../backend/static:/var/www/app/static
      - ../backend/media:/var/www/app/media
      - ../frontend/dist://usr/share/nginx/html
      - ../frontend/storybook-static://usr/share/nginx/storybook
      - ../backend/csp_hashes.txt:/etc/nginx/csp_hashes.txt:ro
    ports:
      - ${WEB_HTTP_PORT}:80
      - ${WEB_HTTPS_PORT}:443
    environment:
      PORTFOLIO_HOST: ${PORTFOLIO_HOST}
      PORTFOLIO_TLS_CERT: ${PORTFOLIO_TLS_CERT}
      PORTFOLIO_TLS_KEY: ${PORTFOLIO_TLS_KEY}
      PORTFOLIO_TLS_DHPARAMS: ${PORTFOLIO_TLS_DHPARAMS}
      WAGTAIL_ADMIN_PATH: ${WAGTAIL_ADMIN_PATH}
      WEB_HTTP_PORT: ${WEB_HTTP_PORT}
      WEB_HTTPS_PORT: ${WEB_HTTPS_PORT}
      NGINX_ERROR_LOG_LEVEL: ${NGINX_ERROR_LOG_LEVEL:-error}
    depends_on:
      - app-backend
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "10"
        tag: "{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}"

  mkcert:
    container_name: mkcert
    hostname: mkcert
    image: vishnunair/docker-mkcert
    environment:
      domain: ${PORTFOLIO_HOST}
    volumes:
      - ./nginx/certs:/root/.local/share/mkcert/
    command: /bin/sh -c 'mkcert -install && for i in $$(echo $$domain | sed "s/,/ /g"); do [ ! -f /root/.local/share/mkcert/$$i.pem ] && mkcert $$i; done && tail -f -n0 /etc/hosts'
